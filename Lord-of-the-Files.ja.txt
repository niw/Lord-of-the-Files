Lord of the Files: How GitHub Tamed Free Software (And More)
ファイルを奪え! - どのようにGithubがフリーソフトウェアを支配したか。あとオマケ。

ワイアードエンタープライズ ロバート・マクミリアン著

サンフランシスコ発 - GitHubの創業者が去年、今流行りのSOMAのロフトに引っ越した時、最初にしたことは改装だった。
暖炉(偽物だけど)、豪華な革張りの椅子、スコッチが隠されている木製の地球儀 ― 大きなオフィスを豪華な高級スイートルームへと作り替えたのだ。壁にかかっているのナポレオンのような格好をした五本のタコの足があるネコの絵である。Githubはこのネコを「オクトキャット」と読んでいる。

しかし、実際、ここは本当の高級スイートルームではない。ここは誰でも入ること出来て、仕事をしたり遊んだりできるミーティングルームである。

Githubの共同創業者でCIOのスコット・チャコンは「誰でも友達を連れてあの部屋に入って見せていいよ」と言う。
チャコンとCEOのクリス・ワンストラス、それから他の経営者も個室を持たない。オープンはフロアで作業をするコーダーの隣に座ってモニターを睨むほかの社員と仕事をしている。もちろん、LCD Soundsystemの爆音の音楽を聞きながら。

GitHub’s geektastic 14,000-square-foot loft mirrors its mission: to democratize computer programming. GitHub.com is best thought of as Facebook for geeks. Instead of uploading videos of your cat, you upload software. Anyone can comment on your code and add to it and build it into something better. The trick is that it decentralizes programming, giving everyone a new kind of control. GitHub has shaken up the way software gets written, making coding a little more anarchic, a little more fun, and a lot more productive.

And the software world loves it. GitHub now has more than 1.3 million users, and over 2 million source code repositories — eight times the tally from just two years ago. If you count snippets of code and Wiki pages that are stored on the site, there are more than 4 million repositories. Two years ago, GitHub was a team of eight, holding company meetings in San Francisco cafes. By the beginning of 2011, they’d grown to 14 “hubbernauts” — as GitHub employees are affectionately called — and a year later, they’re at 57. In July, they took over the former digs of blogging outfit Six Apart. GitHub is growing fast — and it hasn’t taken a dime of venture funding.

Once you’ve heard about GitHub, you start to see it almost everywhere. Sometimes, it’s hosting the code that underpins a big-name website. Other times, it’s driving a secret skunkworks project inside a Fortune 500 company. It has brought open source software that much closer to fulfilling its promise — but it doesn’t stop there. It’s also democratizing the creation of web pages and DNA analysis tools and maybe even the law of the land.

“GitHub has changed the way that people approach development,” says Tom Preston-Werner, the company’s chief technology officer. “They realize that it doesn’t have to be so complex.”

Gitは欲望のスクラッチ

他のうまくいっているギークなプロジェクト同様、Githubはプログラマ自身の欲望のスクラッチから始まった。5年くらい前、ワンストラスと同僚のプログラマP.J.ハイアットは共にテクノロジーニュース＆レビューサイトであるCnetにコードを放りこんでいた。彼らはRuby on Railsを選択していたが、それはウェブアプリケーションを簡単に作るためのプログラミングフレームワークだった。

ワンストラスとハイアットは自身のサイトをCnetで作るに従って、Ruby on Rails自身にたくさんの改善を施すことになった。しかし、それらの変更をオープンソースのプロジェクトに統合して戻すことがそれほど簡単ではないことに気づいた。then-dominantモデルのオープンソース開発によって、Railsはプロジェクトのソースコードに「commit」する権利を与えられた信頼あるプログラマ集団によって管理されていた。彼らの変更を中央のコードに加え様と思うと、ワンストラスとハイアットは信頼されたプログラマ達にせがみ、自分達の変更が価値あるものであることを納得してもらう必要があった。それはしばしばコードを書くことよりもやることが多かった。

彼らだけが、信頼された門番によるオープンソースモデルに悩まされている開発者ではなかった。10年前、リーナス・トーバルズは、自身がLinux OSの門番として招待した人達の管理役に苦労していた。始めは、トーバルズがヘルシンキ大学のウェブサイトにLinuxを置いていた。もし誰かがコードにバグを発見したら、彼にeメールで変更したファイルを送っていた。もしトーバルズがそのメールを読んで変更点を気に入ったら、彼はそれをLinuxに組み込んでいた。しかしトーバルズはメールを読まないことで有名だったので、プロジェクトの人気が出るに従って、たくさんの意見が見過ごされる様になった。

これはオープンソースソフトウェアの小さな汚れた秘密だった。平均的なフリーソフトウェアプロジェクトは、大量のコードを持っているが、そのほとんどのコードが実際には使われることはない。カジュアルなユーザーにとって、彼らの変更点を開発者に見せることも、オープンソースコードベースにマージして戻すことも、しばしば難しすぎた。

リーナス、2度目の到来

そこで2005年にトーバルズはGitという、ソフトウェアプロジェクトの管理という面倒な仕事を無くすためにデザインされたバージョン管理ソフトウェアを作った。Gitを利用すると、誰でも自分の持っているバージョンのLinuxを好きにいじくり回す事ができ、ーはっきり言えば他のソフトウェアプロジェクトであってもー、そしてボタンを押せばそれらの変更をトーバルズや他のみんなに共有することができる。そこには門番はいない。実用的に言えば、トーバルズは誰かがLinuxプロジェクトの代替を簡単に作れるツールを創りだした。技術用語で言えば、それは「fork」と呼ばれる。

1990年代を振り返ると、forkすることは悪いことだと考えられていた。それはこれらの矛盾から作られていた、互換性のないUnixである。誰かがどこかで自分のLinuxのforkを作ったら、そのOS上では同じプログラムが同じように動かなくなってしまうのでは、という大きな恐怖が一時あった。しかし、Gitの世界ではofrkすることは良いことである。そのトリックは人々の改善作業がコミュニティに必ず共有されるということだ。人々にプロジェクトをforkしてもらい自分でいじくり回してもらうことは、コードを触る権利のある数人の信頼ある人々の間だけに完全に閉じるよりもずっと良い。

ポートランドでは珍しい晴れた2月のある日、トーバルズは彼のオフィスでWiredに向けてGitのデモを行う。kernelの中で問題となりうる同じコードに対して、2つの異なる手法で修正する新しい提案を彼はすばやく見つける。

昔のやり方は「完全な新しいブランチから始めるのは難しい、なぜならyou generally need to convince the people involved in the status quo up-front about their need to support that radical branch」とトーバルズは言う。「対照的に、Gitは許可を尋ねることなくともかく"やってみる"というのを簡単にしていて、それから戻ってきて結果を見せるーみんなに"僕はこんなことをやったんだ、僕のやり方が良いってことをたくさん見せられるよ"って言えばいい」

Linuxのために作られたけれども、Gitはすぐに全ての巨大なコードベースを管理する大規模な組織にとって神様からの贈り物となった。今日では、Facebook、Staples、Verizon、そしてMicrosoftまでもがユーザーである。GoogleではGitがあまりにも重要なので、会社から濱野純ー彼はトーバルズからプロジェクトを引き継いでGitのためにフルタイムで働いているーと、プロジェクトの副司令官であるショーン・ピアースに対してお金を支払っている。

"いらいら"せずにGitを使う

問題は、全ての人間ががリーナス・トーバルズではないし、全ての会社がGoogleではないということだ。99パーセントの人にとって、Gitのコマンドラインインタフェースは使いにくいことで有名だ。それがGitHubが流行した理由だ。GitHubはGitをシンプルにした。たくさん。その最初のスローガンはこれだ：「Gitホスティング：いらいらせずに」

トム・プレストン＝ワーナーはGitHubを思いつき、2007年10月のある夜のZeke'sーダウンタウンのサンフランシスコジャイアンツの球場から数ブロックのところにあるスポーツバーーでのミートアップで、クリス・ワンストラスを焚きつけた。

最初は、GitHubはサイドプロジェクトだった。ワンストラスとプレストン＝ワーナーはブレインストーミングするために土曜日に会っていて、自由時間にコードを書いたり本業をしていた。「GitHubはスタートアップや会社になるとは思ってなかった。GitHubは単に僕達が欲しいと思ったツールだったんだ」ワンストラスは言う。しかし、Gmailに触発されて、彼らはプロジェクトをプライベートベータにして、他の人にも開いた。すぐに、外の世界で人気を博した。

2008年の1月には、ハイアットが仲間になった。そしてあのスポーツバーでの夜から3ヶ月後に、ワンストラスはジェフリー・グローセンバックからメッセージを受け取った。彼はPeepCodeというオンライン学習サイトの創立者でもあり、PeepCodeはGitHubを使い始めていた。「私は、私の会社のコードをここに置いている」グローセンバックは言った。「君達に何も支払わないのは私の気分が悪い。小切手を送ってもいいだろうか？」

それは初めてのお金だった。2008年7月にMicrosoftは、プレストン＝ワーナーが本業として提供していたスタートアップであるPowersetを買収した。ソフトウェアの巨人はプレストン＝ワーナーに30万ドルのボーナスとストックオプションを提示して、3年間留まるように申し出た。しかし彼はそこを去り、全てをGitHubに投じるようになる。

「その当時そういうのを辞めるというのは多少の恐怖があったけど、私はあの決断を変えるつもりはなかった」彼は今はこう言う。

今年の始めにWiredがGitHubのオフィスを訪れた時、我々はちょっとしたギーク達の楽園を見つけた。iPhoneで操作できるクアッドコプターや、four-tap kegerator、そして1970年代式の大きな赤い電話だけは完璧な、ホワイトハウスの司令室の安価な模倣品の様な会議室があった。だが、それらのおもちゃがGitHubを異なるものとしているわけではない。スタートアップの持つ、会社の指揮統制に対するはっきりとした敵対心が、本当に違うものとしている。

「私達は休暇を管理しない。私達は時間を管理しない。それは私達には問題ではない」とCIOのスコット・チャコンは言う。「夜中にここに来ると5人いる。木曜の日中に来たら誰もいない」

でも、今まで働いたチームの中で最も生産性の高いソフトウェア開発チームだ、とチャコンは言う。

Git to the Future

Preston-Werner’s bet has paid off. GitHub is now profitable. Users can sign up for free and start contributing, but they pay money if they want to privately host code there — starting at $7 per month. GitHub also sells an enterprise product that lets companies run your own version of GitHub behind the corporate firewall. That starts at $5,000 per year, but can cost hundreds of thousands annually for companies with hundreds of coders.

Ironically, though, GitHub’s die-hard fans don’t include Torvalds, who briefly moved Linux kernel development to GitHub last September following a security breach at its old home.

“I like GitHub a lot,” he says. “There’s a reason it became one of the biggest source code repositories rather quickly.” But he then unfurls a long list of all the “serious” problems he had with it when he hosted his code on the site — many of which have since been fixed. He couldn’t filter comments, the e-mail interface dropped attachments, the web interface messed up code contributions, and so on. The bottom line: GitHub makes it easy to code. But it can also make it easy to generate crap.

That may be true, but it hasn’t held the site back. GitHub users are seemingly everywhere. On recent afternoon in San Francisco’s North Beach neighborhood, Wired was discussing the site with GitHub director of engineering Ryan Tomayko. Suddenly the guy at the next table leaned over and interrupted, like a teenager overhearing two strangers talk about his favorite band. “I just have to tell you,” he said, “GitHub is amazing.”

It’s even feeding the Occupy movement. When Jonathan Baldwin wanted to write a cell-phone version of the People’s Microphone, used by Occupy to pass messages around big crowds, he posted his code straight to GitHub. The site let him share his code easily, and quickly connect with other developers to hammer out technical issues. “GitHub is the best thing ever. If you don’t host on GitHub, it doesn’t exist,” says Baldwin, a student at Parsons the New School for Design in New York.

And software is only part of the story. Geeks are learning that GitHub can help manage other projects as well. Books and even transcripts of talks have popped up on the site. One GitHub user, Manu Sporny, published his DNA information to the site last year, in the hope of spurring development of open-source DNA analysis software by providing real test data to analyze.

When Scott Chacon wrote a book about Git, the first fork appeared within a month. It was a German translation of his book. Now, three years later, it’s been translated into 10 languages, with another 10 translations in the works. Half of the traffic to the book’s website comes from China. “Tons of people in China are learning Git because they can read [the book] in Chinese on my website, because somebody provided that,” he says.

Ryan Blair, a technologist with the New York State Senate, thinks it could even give citizens a way to fork the law — proposing their own amendments to elected officials. A tool like GitHub could also make it easier for constituents to track and even voice their opinions on changes to complex legal code. “When you really think about it, a bill is a branch of the law,” he says. “I’m just in love with the idea of a constituent being able to send their state senator a pull request.”

GitHub today is the darling of the open-source world, but this year, the company has set its sights on Microsoft. The company recently hired a pair of developers from the software giant, and it’s working on new software to rope in the still-considerable army of coders who write programs using Microsoft’s software development tools.

“I want to live in a world where it’s easier to work together than to work alone… where every part of the software development process is a joy,” says CEO Wanstrath. “And I think GitHub can help make that happen.


SIDEBAR:

Why Git? It’s the British slang term for stupid, despicable person — arse. The joke “I name all my projects for myself, first Linux, then git” was just too good to pass up. But it is also short, easy-to-say, and type on a standard keyboard. And reasonably unique and not any standard command, which is unusual.–Linus Torvalds
